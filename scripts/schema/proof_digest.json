{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://k4/schema/proof_digest.json",
  "type": "object",
  "additionalProperties": false,
  "required": [
    "schema_version",
    "route_id",
    "t2_sha256",
    "classing",
    "per_class",
    "forced_anchor_residues",
    "encrypts_to_ct",
    "seed_recipe",
    "seed_u64"
  ],
  "properties": {
    "schema_version": {"type": "string", "enum": ["1.0.0"]},
    "route_id": {
      "type": "string",
      "pattern": "^(GRID|SPOKE|RAILFENCE)_[A-Z0-9_]+$",
      "$comment": "Route identifier for GRID/SPOKE/RAILFENCE families"
    },
    "t2_sha256": {
      "type": "string",
      "pattern": "^[a-f0-9]{64}$",
      "$comment": "SHA-256 of permutation table"
    },
    "classing": {"type": "string", "enum": ["c6a", "c6b"]},
    "per_class": {
      "type": "array",
      "minItems": 6,
      "maxItems": 6,
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": ["family", "L", "phase"],
        "properties": {
          "family": {"type": "string", "enum": ["vigenere", "variant_beaufort", "beaufort"]},
          "L": {"type": "integer", "minimum": 10, "maximum": 22},
          "phase": {"type": "integer", "minimum": 0}
        }
      }
    },
    "forced_anchor_residues": {
      "type": "array",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": ["i", "class_id", "residue", "kv"],
        "properties": {
          "i": {"type": "integer", "minimum": 0},
          "class_id": {"type": "integer", "minimum": 0, "maximum": 5},
          "residue": {"type": "integer", "minimum": 0},
          "kv": {"type": "integer", "minimum": 0, "maximum": 25}
        }
      }
    },
    "encrypts_to_ct": {"type": "boolean"},
    "seed_recipe": {"type": "string"},
    "seed_u64": {
      "type": "integer",
      "minimum": 0,
      "maximum": 18446744073709551615,
      "$comment": "u64 seed for RNG"
    },
    "pt_sha256": {"type": "string", "pattern": "^[a-f0-9]{64}$"},
    "ct_sha256": {"type": "string", "pattern": "^[a-f0-9]{64}$"}
  }
}
